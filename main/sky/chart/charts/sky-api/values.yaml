replicaCount: 5

image:
  repository: harbor.flou.dev/coflnet/skyapi
  tag: 764a4abb-5b5d-49a9-96b9-4bd1028f31ce
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: 
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
ports:
  - name: websocket
    containerPort: 8000
  - name: api
    containerPort: 8008

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

resources: 
  requests:
    cpu: 500m
    memory: 500Mi
  limits: {}


services:
  - sky-api
  - sky-api-canary-service
  - sky-api-stable-service
serivcePorts:
  - name: api
    port: 8000
    targetPort: 8000
  - name: websocket
    port: 8008
    port: 8008

template: &canaryTemplate sky-api
canaryService: &canaryService sky-api-canary-service
stableService: &stableService sky-api-stable-service
mainService: &mainService sky-api
trafficSplit: &trafficSplit sky-api
canary: 
  steps:
  - setWeight: 10
  - pause: 
      duration: 3m
  - analysis:
      templates:
      - templateName: *canaryTemplate
      args:
      - name: service-name
        value: *canaryService
  - setWeight: 50
  - pause:
      duration: 5m
  - analysis:
      templates:
      - templateName: *canaryTemplate
      args:
      - name: service-name
        value: *canaryService
  - setWeight: 100
  - pause:
      duration: 5m
  - analysis:
      templates:
      - templateName: *canaryTemplate
      args:
      - name: service-name
        value: *canaryService
  maxUnavailable: 1
  canaryService: *canaryService
  stableService: *stableService
  trafficRouting:
    smi:
      rootService: *mainService
      trafficSplitName: *trafficSplit

readinessProbe:
  httpGet:
    path: /metrics
    port: 8000
  initialDelaySeconds: 20
  periodSeconds: 3

envVars: []
