apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: ci-notification
  namespace: argo
  labels:
    workflows.argoproj.io/container-runtime-executor: emissary
spec:
  securityContext:
    runAsUser: 1000
    runAsGroup: 3000
    fsGroup: 2000
  serviceAccountName: argo-events-sa
  templates:
  - name: ci-notification
    inputs:
      parameters:
      - name: project
      - name: organization
      - name: success
    container:
      image: harbor.flou.dev/coflnet/ci-notifications:latest
      command: ["/app"]
      resources:
        requests:
          memory: 50Mi
          cpu: 10m
      env:
        - name: PROJECT
          value: "{{"{{"}}inputs.parameters.project{{"}}"}}"
        - name: ORGANIZATION
          value: "{{"{{"}}inputs.parameters.organization{{"}}"}}"
        - name: SUCCESS
          value: "{{"{{"}}inputs.parameters.success{{"}}"}}"
        - name: TOPIC_DEV_CHAT
          value: discord-messages
        - name: TOPIC_DEV_SPAM_CHAT
          value: discord-spam-messages


        - name: KAFKA_BROKERS
          valueFrom:
            secretKeyRef:
              name: redpanda
              key: brokers

        - name: KAFKA_USERNAME
          valueFrom:
            secretKeyRef:
              name: redpanda-credentials
              key: username

        - name: KAFKA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redpanda-credentials
              key: password

        - name: KAFKA_TLS_CA_LOCATION
          value: "/tls/cm/ca.crt"

        - name: KAFKA_TLS_CERTIFICATE_LOCATION
          value: "/tls/cm/skyblock.crt"

        - name: KAFKA_TLS_KEY_LOCATION
          value: "/tls/secret/skyblock.key"
      volumeMounts:
        - name: redpanda-secret
          mountPath: /tls/secret
        - name: redpanda-cm
          mountPath: /tls/cm
    volumes: 
    - name: redpanda-secret
      secret:
        secretName: redpanda
    - name: redpanda-cm
      configMap:
        name: redpanda

