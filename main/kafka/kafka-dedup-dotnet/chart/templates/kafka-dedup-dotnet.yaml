{{- range .Values.dedups }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dedup-{{ .name }}
  labels:
    app: dedup-{{ .name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dedup-{{ .name }}
  template:
    metadata:
      labels:
        app: dedup-{{ .name }}
    spec:
      imagePullSecrets:
      {{ toYaml $.Values.imagePullSecrets | nindent 8 }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - dedup-{{ .name }}-redis
            topologyKey: kubernetes.io/hostname
      containers:
      - name: dedup-{{ .name }}
        image: {{ $.Values.image.repository }}:{{ $.Values.image.tag  }}
        ports:
           {{ toYaml $.Values.ports | nindent 10 }}
        {{ if eq .name "sky-test" }}
        args: [ "--test" ]
        {{ end }}
        env:
        - name: KAFKA_HOST
          value: {{ $.Values.kafka.host }}
        - name: REDIS_HOST
          value: dedup-{{ .name }}-redis
        - name: SOURCE_TOPIC
          value: {{ .sourceTopic }}
        - name: TARGET_TOPIC
          value: {{ .targetTopic }}
        - name: BATCH_SIZE
          value: {{ .batchSize | quote }}
        - name: KAFKA__BROKERS
          valueFrom:
            secretKeyRef:
              name: redpanda
              key: brokers
        - name: KAFKA__USERNAME
          valueFrom:
            secretKeyRef:
              name: redpanda-credentials
              key: username
        
        - name: KAFKA__PASSWORD
          valueFrom:
            secretKeyRef:
              name: redpanda-credentials
              key: password
        
        - name: KAFKA__TLS__CA_LOCATION
          value: "/tls/cm/ca.crt"
        
        - name: KAFKA__TLS__CERTIFICATE_LOCATION
          value: "/tls/cm/skyblock.crt"
        
        - name: KAFKA__TLS__KEY_LOCATION
          value: "/tls/secret/skyblock.key"

        - name: GROUP_ID
          value: sky-deduper

        resources:
          {{ toYaml $.Values.resources | nindent 10 }}
        volumeMounts:
        {{ range $.Values.volumes }}
        - name: {{ .mountName }}
          mountPath: {{ .mountPath }}
        {{ end }}
      volumes: 
      {{ range $.Values.volumes }}
        - name: {{ .mountName }}
          {{ if eq .type "configmap"  }}
          configMap:
            name: {{ .name }}
          {{ else}}
          secret:
            secretName: {{ .name }}
          {{ end }}
      {{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: dedup-{{ .name }}
  labels:
    app: dedup-{{ .name }}
spec:
  selector:
    app: dedup-{{ .name }}
  ports:
    {{ toYaml $.Values.serivcePorts | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dedup-{{ .name }}-redis
  labels:
    app: dedup-{{ .name }}-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dedup-{{ .name }}-redis
  template:
    metadata:
      labels:
        app: dedup-{{ .name }}-redis
    spec:
      containers:
      - name: dedup-{{ .name }}-redis
        image: bitnami/redis:6.2-debian-10
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
---
apiVersion: v1
kind: Service
metadata:
  name: dedup-{{ .name }}-redis
spec:
  selector:
    app: dedup-{{ .name }}-redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: dedup{{ .name }}-servicemonitor
  labels:
    release: k8-main-prometheus
    app: dedup-{{ .name }}
spec:
  selector:
    matchLabels:
      app: dedup-{{ .name }}
  endpoints:
  - port: api
    interval: 25s
    path: /metrics
---
{{- end }}
